{
    "info": {
        "name": "Pruebas de Integraci\u00f3n - API JSONPlaceholder",
        "_postman_id": "12345678-abcd-efgh-ijkl-9876543210",
        "description": "Colecci\u00f3n de pruebas de integraci\u00f3n usando JSONPlaceholder.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Obtener lista de posts",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "https://jsonplaceholder.typicode.com/posts",
                    "protocol": "https",
                    "host": [
                        "jsonplaceholder",
                        "typicode",
                        "com"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response should be an array\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.be.an('array');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "Crear nuevo post",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"title\": \"foo\",\n    \"body\": \"bar\",\n    \"userId\": 1\n}"
                },
                "url": {
                    "raw": "https://jsonplaceholder.typicode.com/posts",
                    "protocol": "https",
                    "host": [
                        "jsonplaceholder",
                        "typicode",
                        "com"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "pm.test(\"Body contiene el ID del nuevo post\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('id');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "Simular error al crear post sin cuerpo",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{}"
                },
                "url": {
                    "raw": "https://jsonplaceholder.typicode.com/posts",
                    "protocol": "https",
                    "host": [
                        "jsonplaceholder",
                        "typicode",
                        "com"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code should still be 201 (mocked API)\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "pm.test(\"Body contiene un ID\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('id');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        }
    ]
}